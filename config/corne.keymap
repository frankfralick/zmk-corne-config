/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro


/ {    
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <145>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td01: tap_dance_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MINUS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&as LS(MINUS) MINUS>, <&kp EQUAL>;
        };

        td02: tap_dance_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CTRL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LGUI>;
        };
    };    
    

                keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC       |  '        |  ,        |  .        |  P        |  Y        |       |  F        |  G        |  C        |  R        |  L        | BKSP      |
// | CTRL       |  A        |  O        |  E        |  U        |  I        |       |  D        |  H        |  T        |  N        |  S        |  - _ =    |
// | SHFT       |  ;        |  Q        |  J        |  K        |  X        |       |  B        |  M        |  W        |  V        |  Z        | ESC       |
//                                      | GUI       | LWR       | RET       |       | SPACE     | RSE       | ALT       |
                bindings = <
    &kp ESC     AS(SQT)     AS(COMMA)   AS(DOT)     AS(P)       AS(Y)               AS(F)       AS(G)       AS(C)       AS(R)       &kp L       &kp BSPC
    &kp TAB     AS(A)       AS(O)       AS(E)       AS(U)       AS(I)               AS(D)       &kp H       AS(T)       AS(N)       AS(S)       &td01
    &kp LSHFT   AS(SEMI)    AS(Q)       &kp J       &kp K       AS(X)               AS(B)       AS(M)       AS(W)       AS(V)       AS(Z)       &kp ESC
                                        &td02       &mo 1       &kp RET             &kp SPACE   &mo 2       &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB       |  1        |  2        |  3        |  4        |  5        |       |  6        |  7        |  8        |  9        |  0        | BKSP      |
// | BTCLR      | BT1       | BT2       | BT3       | BT4       | BT5       |       | LFT       | DWN       |  UP       | RGT       |           |           |
// | SHFT       |           |           |           |           |           |       |           |           |           |           |           |           |
//                                      | GUI       |           | SPC       |       | ENT       |           | ALT       |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};

//         keymap {
//                 compatible = "zmk,keymap";

//                 &mt {
//                         tapping-term-ms = <145>;
//                 };

//                 default_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
// //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
//                         bindings = <
//    &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//                   &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
//                         >;
//                 };
//                 lower_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
// //                    | GUI |     | SPC |   | ENT |     | ALT |
//                         bindings = <
//    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                     &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                         >;
//                 };

//                 raise_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
// //                    | GUI |     | SPC |   | ENT |     | ALT |
//                         bindings = <
//    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
//    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
//    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
//                              &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//                         >;
//                 };
//         };
// };
